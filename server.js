const express = require("express");
const http = require("http");
const app = express();
const server = http.createServer(app);
const socket = require("socket.io");
const io = socket(server);

//{socketId: socketId}
//{socket2Id: socket2id}
//....
let users = {};

let firstUser;
let secondUser;

// is triggered by io.connect("https://video-chat-backend.glitch.me/"); in the frontend
io.on("connection", socket => {
  if (!users[socket.id]) {
    //socket.it gets generated by socket.io
    users[socket.id] = socket.id;

    if(Object.keys(users).length === 1){
      firstUser = id
    }
    if(Object.keys(users).length === 2){
      secondUser = id
    }
  }
  

  // when a user connects, the backend will assign him an id
  // this ID is emitted so the user knows what his id is
  socket.emit("yourID", socket.id);

  // update all the clients that are connected
  // their object of users will be updated in realtime
  io.sockets.emit("allUsers", users);

  //not used at the moment
  socket.on("disconnect", () => {
    delete users[socket.id];
  });

  // when a person tries to call somebody else
  //person contacts backend, backend contacts the person that's being called
  socket.on("callUser", data => {
    // contact the person that's being called with the emit key 'hey'
    io.to(data.userToCall).emit("hey", {
      signal: data.signalData,
      from: data.from
    });
  });

  //the user has accepted the call
  socket.on("acceptCall", data => {
    //let the caller know that the the person he has called, accepted the call
    io.to(data.to).emit("callAccepted", data.signal);
  });
});

server.listen(8000, () => console.log("server is running on port 8000"));
